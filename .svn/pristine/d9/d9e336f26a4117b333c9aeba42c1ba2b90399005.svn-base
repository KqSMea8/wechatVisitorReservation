<template>
  <div class="appointmentBox">
    <flexbox>
      <flexbox-item>
        <p class="theme">请填写邀请信息</p>
        <form>
          <fieldset>
            <legend>贵宾姓名</legend>
            <x-input type="text"
                     v-model="userInfo.visTrueName"
                     required
                     style="position:static"></x-input>
          </fieldset>
        </form>
        <form>
          <fieldset>
            <legend>对方手机</legend>
            <x-input type="text"
                     mask="99999999999"
                     v-model="userInfo.visTelephone"
                     is-type="china-mobile"
                     required
                     style="position:static"></x-input>
          </fieldset>
        </form>
        <form>
          <fieldset>
            <legend>您的手机</legend>
            <x-input type="text"
                     mask="99999999999"
                     v-model="userInfo.resTelephone"
                     is-type="china-mobile"
                     required
                     style="position:static"></x-input>
          </fieldset>
        </form>
        <form>
          <fieldset>
            <legend>来访时间</legend>
            <datetime-range title=""
                            :start-date="startDate"
                            :end-date="endDate"
                            :format="'YYYY年MM月DD日'"
                            v-model="userInfo.startTime"
                            @on-change="changeStartTime"
                            class="test"></datetime-range>
          </fieldset>
        </form>
        <form>
          <form>
            <fieldset>
              <legend>截至时间</legend>
              <datetime-range title=""
                              :start-date="startDate1"
                              :end-date="endDate1"
                              :format="'YYYY年MM月DD日'"
                              v-model="userInfo.endTime"
                              @on-change="changeendTime"
                              class="test"></datetime-range>
            </fieldset>
          </form>
          <fieldset>
            <legend>到访人数</legend>
            <popup-picker title=""
                          :data="list1"
                          placeholder="请选择人数"
                          @on-show="onShow"
                          @on-hide="onHide"
                          class="test"
                          v-model="data"
                          @on-change="changeVisitorNum"
                          style="position:static"></popup-picker>
          </fieldset>
        </form>
        <form>
          <fieldset>
            <legend>到访事由</legend>
            <popup-picker title=""
                          placeholder="预约访问"
                          :data="list2"
                          v-model="userInfo.visitorType"
                          @on-show="onShow"
                          @on-hide="onHide"
                          @on-change="changeVisitorType"
                          class="test"
                          style="position:static"></popup-picker>
          </fieldset>
          <fieldset>
            <legend>车牌号码</legend>
            <x-input type="text"
                     placeholder="(选填)"
                     v-model="userInfo.carNumber"
                     @on-focus="onFocus"
                     @on-blur="onBlur"
                     style="position:static"></x-input>
          </fieldset>
        </form>
      </flexbox-item>
    </flexbox>
    <flexbox>
      <flexbox-item>
        <x-button @click.native="showPosition('middle')"
                  type="primary">提交</x-button>
      </flexbox-item>
      <toast v-model="showPositionValue"
             type="text"
             :time="800"
             is-show-mask
             text="提交成功"
             :position="position">{{
        'Basic Usage' }}</toast>
    </flexbox>
  </div>
</template>
<script>
import { setInviteInfo } from '../../api/api.js'
import {
  Flexbox,
  FlexboxItem,
  Group,
  Cell,
  XInput,
  XTextarea,
  XButton,
  XNumber,
  PopupRadio,
  CellFormPreview,
  Qrcode,
  Divider,
  Datetime,
  PopupPicker,
  DatetimeRange,
  Toast
} from 'vux'
import { getDate } from '../../utils/getday.js'
import { upDate } from '../../utils/upday.js'

export default {
  visTelephone: '',
  components: {
    Flexbox,
    FlexboxItem,
    Group,
    Cell,
    XInput,
    XTextarea,
    XButton,
    XNumber,
    PopupRadio,
    CellFormPreview,
    Qrcode,
    Divider,
    Datetime,
    PopupPicker,
    DatetimeRange,
    Toast
  },
  data () {
    return {
      userInfo: {
        visTrueName: '',
        resTelephone: '',
        visTelephone: '',
        carNumber: '',
        endTime: [],
        visitorNum: ''
      },
      fillUrl: '',
      visitorType: [],
      data: [],
      endTime: [],
      startTime: [],
      startDate: [],
      endDate: [],
      startDate1: [],
      endDate1: [],
      msg: '',

      list1: [['1', '2', '3', '4', '5', '6', '7', '8', '9', '10人及其以上']],
      list2: [['预约参观', '邀请访问']],

      position: 'default',
      showPositionValue: false
    }
  },

  methods: {
    isVehicleNo (str) {
      return /^(([\u4E00-\u9FA5][A-Z](([0-9]{5}[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]{4})))|([\u4E00-\u9FA5][A-Z][A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳使领]))$/.test(
        str
      )
    },
    onFocus (val) {
      console.log(val)
    },
    onBlur (val) {
      console.log(val)
      console.log(this.isVehicleNo(val))
      console.log(!this.isVehicleNo(val))
      if (val) {
        if (!this.isVehicleNo(val) === true) {
          event.target.parentNode.parentNode.classList.add('weui-cell_warn')
        } else {
          if (
            event.target.parentNode.parentNode.classList.contains(
              'weui-cell_warn'
            )
          ) {
            event.target.parentNode.parentNode.classList.remove(
              'weui-cell_warn'
            )
          }
        }
      }
    },
    changeStartTime (val) {
      console.log('val change', val)
      this.startTime = val[0].toString() + ' ' + val[1].toString() + ':' + val[2].toString()
      console.log(this.startTime)
    },
    StartTime () {
      let date = new Date()
      console.log(date)
      let startYear = date.getFullYear() + '-'
      let startMonth = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-'
      let startDate = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' '
      let startHours = date.getHours() < 10 ? '0' + (date.getHours()) : date.getHours()
      let startMInutes = date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()
      let exactDate = startYear + startMonth + startDate
      this.userInfo.startTime = [exactDate, startHours, startMInutes]
      console.log(exactDate)
    },
    EndTime () {
      let date = new Date()
      console.log(date)
      let endYear = date.getFullYear() + '-'
      let endMonth = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-'
      let endDate = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' '
      let endHours = (date.getHours() + 4) < 10 ? '0' + (date.getHours() + 4) : date.getHours() + 4
      if (endHours > 24) {
        endDate++
        endHours -= 24
      }
      let endMinutes = date.getMinutes() < 10 ? '0' + (date.getMinutes()) : date.getMinutes()
      let exactDate1 = endYear + endMonth + endDate
      this.userInfo.endTime = [exactDate1, endHours, endMinutes]
      console.log(exactDate1)
    },
    changeendTime (val) {
      console.log('val change', val)
      this.endTime = val[0].toString() + ' ' + val[1].toString() + ':' + val[2].toString()
      console.log(this.endTime)
    },
    changeVisitorNum (val) {
      console.log('val change', val)
      this.data = val.toString()
      console.log(this.data)
    },
    changeVisitorType (val) {
      console.log('val change', val)
      this.visitorType = val
      console.log(this.visitorType)
    },
    onShow () {
      console.log('on show')
    },
    onHide (type) {
      console.log('on hide', type)
    },
    setDate () {
      let arr = getDate()
      console.log(arr)
      this.startDate = arr[0]
      this.endDate = arr[1]
    },
    upDate () {
      let arr = upDate()
      console.log(arr)
      this.startDate1 = arr[0]
      this.endDate1 = arr[1]
    },
    showPosition (position) {
      this.position = position
      this.showPositionValue = true
      let inviteVistorInfo = new FormData()
      inviteVistorInfo.append('trueName', this.userInfo.visTrueName)
      inviteVistorInfo.append('telephone', this.userInfo.visTelephone)
      inviteVistorInfo.append('resTelephone', this.userInfo.resTelephone)
      inviteVistorInfo.append('startTime', this.startTime)
      inviteVistorInfo.append('endTime', this.endTime)
      let str = this.data
      console.log(str.toString())
      console.log(typeof str.toString())
      inviteVistorInfo.append('visitorNum', str.toString())
      let visTypeStr = this.visitorType
      inviteVistorInfo.append('visitorType', visTypeStr.toString())
      inviteVistorInfo.append('carNumber', this.userInfo.carNumber)
      setInviteInfo(inviteVistorInfo).then((res) => {
        console.log(res)
        if (res.data.data === 1) {
          this.showPositionValue = true
          this.toastText = '消息发送成功'
          this.skip()
        } else if (res.data.data === -1) {
          this.showPositionValue = true
          this.toastText = '消息发送失败'
        } else if (res.data.data === -2) {
          this.showPositionValue = true
          this.toastText = '图片上传失败'
        } else if (res.data.data === -3) {
          this.showPositionValue = true
          this.toastText = '被访客手机号未注册'
        }
      }).catch((err) => {
        console.log(err)
      })
    },
    skip () {
      this.$router.push({
        path: '/'
      })
    },
    getUrlParams () {
      let url = decodeURI(document.location.toString())
      let arrObj = url.split('?')
      if (arrObj.length > 1) {
        this.userInfo.resTelephone = this.$route.query.resTelephone
        this.userInfo.visTelephone = this.$route.query.visTelephone
        this.visitorType = this.$route.query.visitorType
        let visTypeArr = []
        visTypeArr.push(this.$route.query.visitorType)
        this.visitorType = visTypeArr
        this.userInfo.resTrueName = this.$route.query.resTrueName
        this.userInfo.visTrueName = this.$route.query.visTrueName
        // this.userInfo.startTime = this.$route.query.entryTime
        this.data = this.$route.query.visNum
        let dataArr = []
        dataArr.push(this.$route.query.visNum)
        this.data = dataArr
        this.userInfo.carNumber = this.$route.query.carNumber
      }
    },

    created () {
      // this.getParams()
      this.setDate()
      this.upDate()
      this.StartTime()
      this.EndTime()
      this.getUrlParams()
      // this.filling()
      console.log(this.data)
      console.log(this.visitorType)
    },
    beforeDestroy () {
      clearInterval(this.timer)
    }
  }
}
</script>

<style>
.theme {
  width: 60%;
  background: #ddf0dc;
  color: #477849;
  font-size: 1.5rem;
  margin: 40px auto 0;
  text-align: center;
  padding: 15px;
}

.appointmentBox {
  margin: 5px;
  text-align: center;
}

button {
  width: 80% !important;
  margin: 30px auto 20px;
}

fieldset {
  margin: 30px auto 0;
  padding: 0px auto;
  width: 70%;
  border-color: #b1afb2;
  border-width: 1px;
  border-radius: 7px;
}

legend {
  margin-left: 15px;
  margin-bottom: -5px;
}

input {
  background: rgba(0, 0, 0, 0);
  border-style: hidden;
  width: 95%;
  height: 35px;
  margin-left: 2%;
  margin-bottom: 1%;
  outline: none;
  caret-color: #71abce;
}

.test .vux-popup-picker-select {
  width: 100%;
  position: static;
  text-align: center !important;
}
</style>
